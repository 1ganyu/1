namespace = global\ORFix
; ORFix.ini Version 0.9.5
; 4.3 Second Iteration
; - Fixed resource handling issues that broke similar extensions like orfix

; Check latest version at: http://github.com/LeoTorreZ/LeoTools/blob/main/releases/ORFix.ini

; Global 3.0+ character reflection/outline color fix
; Anime Game Modding Group discord server (https://discord.gg/agmg)
; silentnightsound, modder4869, leotorrez, takoyaki.desu, hummyr, sinsofseven

; To use this reflection/outline color shader fix: 
; 1) Place this ini into 3Dmigoto Mods folder, and under the BufferValues folder if available
; 2) At the bottom of each modded [TextureOverride {Character} {ObjectPart}], type the following command:

; run = CommandList\global\ORFix\ORFix

; Example:
; [TextureOverrideLaylaHead]
; hash = 8ec3c0d8
;; hash = b617aa07
; match_first_index = 0
; ib = ResourceLaylaHeadIB
; ps-t0 = ResourceLaylaHeadDiffuse
; ps-t1 = ResourceLaylaHeadLightMap
; run = CommandList\global\ORFix\ORFix
;
; Full guide: https://github.com/leotorrez/LeoTools/blob/main/guides/ORFixGuide.md

; Variables ------------------------------------------
[Constants]
	global $active = 0	

[Present]
	post $active = 0	
 
; Commandlists ---------------------------------------
[CommandListORFix]
	$active = 1
	ResourceRefDiffuse = reference ps-t1
	ResourceRefLightmap = reference ps-t2

[CommandListReflectionFix]
	if $active == 1
		pre ResourceReflectionAux = ref ps-t0
		ps-t0 = reference ResourceRefDiffuse
		drawindexed = auto
		ps-t0 = ResourceReflectionAux
		clear = ResourceRefDiffuse
		clear = ResourceReflectionAux
	endif
	$active = 0

[CommandListOutlineFix]
	if $active == 1
		pre ResourceOutlineAux = ref ps-t1
		ps-t1 = reference ResourceRefLightmap
		drawindexed = auto
		ps-t1 = ResourceOutlineAux
		clear = ResourceRefLightmap
		clear = ResourceOutlineAux
	endif
	$active = 0

; Shaders --------------------------------------------
[ShaderOverrideOutline]
	hash = e795de98764fb2b9
	allow_duplicate_hash = overrule
	run = CommandListOutlineFix

[ShaderRegexCharReflection]
	shader_model = ps_5_0
	run = CommandListReflectionFix

[ShaderRegexCharReflection.pattern]
	mul r\d+\.\w+, r\d+\.\w+,[^.]*\.\w+\n
	mad o\d+\.\w+, r\d+\.\w+, cb\d+\[\d+\]\.\w+, r\d+\.\w+\n
	mov o\d+\.\w+, l\(\d+\.\d+\)\n

[ResourceRefDiffuse]
[ResourceRefLightmap]
[ResourceOutlineAux]
[ResourceReflectionAux]

; [ShaderRegexCharOutline]
; if $active == 1
; 	shader_model = ps_5_0
; 	run = CommandListOutlineFix
; endif

; [ShaderRegexCharOutline.pattern]
; ne r\d\.\w+, l\(-?\d*\.?\d+, -?\d*\.?\d+, -?\d*\.?\d+, -?\d*\.?\d+\), -?cb\d\[\d+\]\.\w+\n
; add r\d\.\w+, v\d\.\w+, l\(-?\d*\.?\d+\)\n
; lt r\d\.\w+, r\d\.\w+, l\(-?\d*\.?\d+\)\n
; and r\d\.\w+, r\d\.\w+, r\d\.\w+\n
; discard_nz r\d\.\w+\n
; ne r\d\.\w+, l\(-?\d*\.?\d+, -?\d*\.?\d+, -?\d*\.?\d+, -?\d*\.?\d+\), -?cb\d\[\d+\]\.\w+\n
; if_nz[\s\S]+^endif\n
; sample_indexable\(texture\dd\)\(float,float,float,float\) r\d\.\w+, v\d\.\w+, t\d\.\w+, s\d\n
; eq r\d\.\w+, -?cb\d\[\d+\]\.\w+, l\(-?\d*\.?\d+\)\n
; add r\d\.\w+, r\d\.\w+, -?cb\d\[\d+\]\.\w+\n
; lt r\d\.\w+, r\d\.\w+, l\(-?\d*\.?\d+\)\n
; and r\d\.\w+, r\d\.\w+, r\d\.\w+\n
; discard_nz r\d\.\w+\n
; (?:(?:ne r\d\.\w+, l\(-?\d*\.?\d+, -?\d*\.?\d+, -?\d*\.?\d+, -?\d*\.?\d+\), -?cb\d\[\d+\]\.\w+\n)+(?:or r\d\.\w+, r\d\.\w+, r\d\.\w+\n)*)+
; if_nz[\s\S]+^endif\n
; ne r\d\.\w+, l\(-?\d*\.?\d+, -?\d*\.?\d+, -?\d*\.?\d+, -?\d*\.?\d+\), -?cb\d\[\d+\]\.\w+\n
; mul r\d\.\w+, -?cb\d\[\d+\]\.\w+, l\(-?\d*\.?\d+\)\n
; movc o\d\.\w+, r\d\.\w+, r\d\.\w+, r\d\.\w+\n
; mad o\d\.\w+, v\d\.\w+, l\(-?\d*\.?\d+, -?\d*\.?\d+, -?\d*\.?\d+, -?\d*\.?\d+\), l\(-?\d*\.?\d+, -?\d*\.?\d+, -?\d*\.?\d+, -?\d*\.?\d+\)\n
; (?:mov o\d\.\w+, l\(-?\d*\.?\d+\)\n
; mov o\d\.\w+, r\d\.\w+\n)+
; (?:mov o\d\.\w+, -?cb\d\[\d+\]\.\w+\n
; mov o\d\.\w+, l\(-?\d*\.?\d+\)\n)+
